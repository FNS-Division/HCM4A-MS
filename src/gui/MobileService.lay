LAYOUT(StationsLayout, 748, 424)
	ITEM(Upp::ArrayCtrl, RefTable, HSizePosZ(0, 0).VSizePosZ(52, 0))
	ITEM(Upp::DrawingCtrl, dv___1, HSizePosZ(0, 0).TopPosZ(0, 52))
	ITEM(Upp::Button, BtnOpen, SetLabel(t_("Open")).LeftPosZ(8, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnSave, SetLabel(t_("Save")).LeftPosZ(248, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnNew, SetLabel(t_("Add New")).LeftPosZ(368, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnAppend, SetLabel(t_("Add stations from file")).LeftPosZ(128, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnClear, SetLabel(t_("Delete All")).RightPosZ(12, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnDelete1, SetLabel(t_("Delete One")).RightPosZ(132, 116).TopPosZ(8, 36))
END_LAYOUT

LAYOUT(StationsTestLayout, 752, 424)
	ITEM(Upp::ArrayCtrl, TestTable, HSizePosZ(0, 4).VSizePosZ(52, 0))
	ITEM(Upp::DrawingCtrl, dv___1, HSizePosZ(0, 4).TopPosZ(0, 52))
	ITEM(Upp::Button, BtnNew, SetLabel(t_("Add New")).LeftPosZ(368, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnDelete1, SetLabel(t_("Delete One")).RightPosZ(136, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnOpen, SetLabel(t_("Open")).LeftPosZ(8, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnAppend, SetLabel(t_("Add stations from file")).LeftPosZ(128, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnSave, SetLabel(t_("Save")).LeftPosZ(248, 116).TopPosZ(8, 36))
	ITEM(Upp::Button, BtnClear, SetLabel(t_("Delete All")).RightPosZ(16, 116).TopPosZ(8, 36))
END_LAYOUT

LAYOUT(MapsLayout, 672, 428)
	UNTYPED(map, HSizePosZ(172, 0).VSizePosZ(0, 0))
	ITEM(Upp::TreeCtrl, mapTree, SetFrame(Upp::NullFrame()).LeftPosZ(0, 172).VSizePosZ(0, 0))
	ITEM(Upp::DrawingCtrl, dv___2, RightPosZ(0, 100).TopPosZ(0, 107))
	ITEM(Upp::Option, optionTopo, SetLabel(t_("TopoTile")).RightPosZ(12, 80).TopPosZ(4, 16))
	ITEM(Upp::Option, optionMorpho, SetLabel(t_("MorphoTile")).RightPosZ(12, 80).TopPosZ(24, 16))
	ITEM(Upp::Option, optionDegLines, SetLabel(t_("Degree Lines")).RightPosZ(12, 80).TopPosZ(44, 16))
	ITEM(Upp::Option, optionGoogle, SetLabel(t_("Google")).RightPosZ(12, 80).TopPosZ(64, 16))
	ITEM(Upp::Option, optionGoogleHybrid, SetLabel(t_("Google Hybrid")).RightPosZ(4, 88).TopPosZ(84, 16))
END_LAYOUT

LAYOUT(ResultsLayout, 800, 620)
	ITEM(Upp::ArrayCtrl, table, HSizePosZ(8, 8).VSizePosZ(180, 36))
	ITEM(Upp::LabelBox, dv___1, SetLabel(t_("Point to Point calculation")).SetInk(Upp::Black).LeftPosZ(8, 256).TopPosZ(4, 148))
	ITEM(Upp::EditDoubleSpin, edDepolLoss, Min(0).Max(99).MaxChars(4).LeftPosZ(196, 64).TopPosZ(68, 20))
	ITEM(Upp::Label, dv___3, SetLabel(t_("Depolarization loss [dB]")).LeftPosZ(20, 176).TopPosZ(68, 20))
	ITEM(Upp::EditDoubleSpin, edPtoP, Min(0).Max(99.9).MaxChars(4).LeftPosZ(196, 64).TopPosZ(44, 20))
	ITEM(Upp::Label, dv___5, SetLabel(t_("Permissible filed strength [dBμ/m]")).LeftPosZ(20, 176).TopPosZ(44, 20))
	ITEM(Upp::EditDoubleSpin, linePermFS, Min(0).Max(99.9).MaxChars(4).LeftPosZ(456, 64).TopPosZ(68, 20))
	ITEM(Upp::Label, dv___7, SetLabel(t_("Permissible filed strength [dBμ/m]")).LeftPosZ(280, 176).TopPosZ(68, 20))
	ITEM(Upp::EditDoubleSpin, cbrPermFS, Min(0).Max(99.9).MaxChars(4).LeftPosZ(720, 64).TopPosZ(68, 20))
	ITEM(Upp::Label, dv___9, SetLabel(t_("Permissible filed strength [dBμ/m]")).LeftPosZ(544, 176).TopPosZ(68, 20))
	ITEM(Upp::DropList, drlPointToPoint, LeftPosZ(20, 240).TopPosZ(20, 20))
	ITEM(Upp::LabelBox, dv___11, SetLabel(t_("Line calculation")).SetInk(Upp::Black).LeftPosZ(272, 256).TopPosZ(4, 148))
	ITEM(Upp::DropList, drlLine, LeftPosZ(280, 240).TopPosZ(92, 20))
	ITEM(Upp::Label, dv___13, SetLabel(t_("Country")).LeftPosZ(280, 40).TopPosZ(20, 20))
	ITEM(Upp::Label, dv___14, SetLabel(t_("Country")).LeftPosZ(544, 40).TopPosZ(20, 20))
	ITEM(Upp::EditIntSpin, lineCross, Min(0).Max(999).MaxChars(3).LeftPosZ(456, 64).TopPosZ(44, 20))
	ITEM(Upp::Label, dv___16, SetLabel(t_("Calculation line [km]")).LeftPosZ(280, 176).TopPosZ(44, 20))
	ITEM(Upp::Button, BtnLine, SetLabel(t_("Calculate")).SetFont(Upp::StdFont().Bold()).LeftPosZ(408, 112).TopPosZ(116, 28))
	ITEM(Upp::Button, BtnExcel, SetLabel(t_("Save to Excel")).SetFont(Upp::StdFont().Bold()).RightPosZ(8, 112).BottomPosZ(4, 28))
	ITEM(Upp::DropList, lineLandTo, LeftPosZ(456, 64).TopPosZ(20, 20))
	ITEM(Upp::LabelBox, dv___20, SetLabel(t_("CBR calculation")).SetInk(Upp::Black).LeftPosZ(536, 256).TopPosZ(4, 148))
	ITEM(Upp::DropList, drlCbr, LeftPosZ(544, 240).TopPosZ(92, 20))
	ITEM(Upp::EditIntSpin, cbrCross, Min(0).Max(999).MaxChars(3).LeftPosZ(720, 64).TopPosZ(44, 20))
	ITEM(Upp::Label, dv___23, SetLabel(t_("Cross border range [km]")).LeftPosZ(544, 176).TopPosZ(44, 20))
	ITEM(Upp::Button, BtnCbr, SetLabel(t_("Calculate")).SetFont(Upp::StdFont().Bold()).LeftPosZ(672, 112).TopPosZ(116, 28))
	ITEM(Upp::DropList, cbrLandTo, LeftPosZ(720, 64).TopPosZ(20, 20))
	ITEM(Upp::Button, BtnPtoP, SetLabel(t_("Calculate")).SetFont(Upp::StdFont().Bold()).LeftPosZ(148, 112).TopPosZ(92, 28))
	ITEM(Upp::Label, statusLabel, SetAlign(Upp::ALIGN_CENTER).HSizePosZ(8, 8).TopPosZ(152, 24))
END_LAYOUT

LAYOUT(SettingsLayout, 628, 176)
	ITEM(Upp::DrawingCtrl, dv___0, HSizePosZ(4, 4).TopPosZ(116, 56))
	ITEM(Upp::EditString, EdTopoPath, MaxLen(250).TrimLeft(true).TrimRight(true).MaxChars(250).LeftPosZ(112, 420).TopPosZ(16, 20))
	ITEM(Upp::Button, BtnTopoPath, SetLabel(t_("Browse")).LeftPosZ(540, 72).TopPosZ(16, 20))
	ITEM(Upp::Label, dv___3, SetLabel(t_("Topopath")).LeftPosZ(12, 96).TopPosZ(16, 19))
	ITEM(Upp::EditString, EdMorphoPath, MaxLen(250).TrimLeft(true).TrimRight(true).MaxChars(250).LeftPosZ(112, 420).TopPosZ(40, 20))
	ITEM(Upp::Button, BtnMorphoPath, SetLabel(t_("Browse")).LeftPosZ(540, 72).TopPosZ(40, 20))
	ITEM(Upp::Label, dv___6, SetLabel(t_("Morphopath")).LeftPosZ(12, 96).TopPosZ(40, 19))
	ITEM(Upp::EditString, EdBorderPath, MaxLen(250).TrimLeft(true).TrimRight(true).MaxChars(250).LeftPosZ(112, 420).TopPosZ(64, 20))
	ITEM(Upp::Button, BtnBorderPath, SetLabel(t_("Browse")).LeftPosZ(540, 72).TopPosZ(64, 20))
	ITEM(Upp::Label, dv___9, SetLabel(t_("Borderpath")).LeftPosZ(12, 96).TopPosZ(64, 19))
	ITEM(Upp::Button, cancel, SetLabel(t_("CANCEL")).SetFont(Upp::StdFont().Bold()).LeftPosZ(464, 152).TopPosZ(124, 40))
	ITEM(Upp::Button, ok, SetLabel(t_("OK")).SetFont(Upp::StdFont().Bold()).LeftPosZ(304, 152).TopPosZ(124, 40))
END_LAYOUT

LAYOUT(StationEditorLayout, 1100, 607)
	ITEM(Upp::LabelBox, dv___0, SetLabel(t_("Header")).LeftPosZ(236, 854).TopPosZ(2, 177))
	ITEM(Upp::EditString, h02, MaxLen(80).MaxChars(80).LeftPosZ(456, 184).TopPosZ(42, 20))
	ITEM(Upp::EditInt, h01, Min(0).Max(99).MaxChars(2).LeftPosZ(456, 184).TopPosZ(20, 20))
	ITEM(Upp::Label, dv___3, SetLabel(t_("[02] File contents")).LeftPosZ(240, 212).TopPosZ(42, 20))
	ITEM(Upp::EditString, h03, MaxLen(1).MaxChars(1).LeftPosZ(456, 184).TopPosZ(64, 20))
	ITEM(Upp::DropList, h04, LeftPosZ(456, 184).TopPosZ(86, 20))
	ITEM(Upp::Label, dv___6, SetLabel(t_("[03] File contents code")).LeftPosZ(240, 212).TopPosZ(64, 20))
	ITEM(Upp::DropList, tx13Xcc, LeftPosZ(456, 184).TopPosZ(410, 20))
	ITEM(Upp::DropList, tx1Adfreqn, LeftPosZ(560, 80).TopPosZ(188, 20))
	ITEM(Upp::Label, dv___9, SetLabel(t_("[04] Originating Country")).LeftPosZ(240, 212).TopPosZ(86, 20))
	ITEM(Upp::DropList, tx4Bcntr, LeftPosZ(896, 184).TopPosZ(210, 20))
	ITEM(Upp::DropList, tx9Dpol, Tip(t_("\001[g {{2234:901:6865h1; [ [2 Polarization  ]]:: [ [2 Symbol  ]]:: [ [2 Definition]]:: [ [2 Horizontal linear]]:: [ [2 H]]:: [ [2 The electric field intensity vector is in the horizontal plane.]]:: [ [2 Vertical linear]]:: [ [2 V]]:: [ [2 The magnetic field intensity vector is in the horizontal plane.]]:: [ [2 Right `- hand slant]]:: [ [2 SR]]:: [ [2 The electric field intensity vector is in the plane rotated 45 degrees clockwise from the vertical position, as seen from the transmitting point.]]:: [ [2 Left – hand slant]]:: [ [2 SL]]:: [ [2 The electric field intensity vector is in the plane rotated 45 degrees anti`-clockwise from the vertical position, as seen from the transmitting point.]]:: [ [2 Right `- hand circular or direct]]:: [ [2 CR]]:: [ [2 The electric field intensity vector, observed in any fixed plane, normal to the direction of propagation, whilst looking in the direction of propagation, rotates with time in a right`-hand or clockwise direction]]:: [ [2 Left – hand circular]&][ [2 or indirect]]:: [ [2 CL]]:: [ [2 The electric field intensity vector, observed in any fixed plane, normal to the direction of propagation, whilst looking in the direction of propagation, rotates with time in a left`-hand or anti`-clockwise direction]]:: [ [2 Dual]]:: [ [2 D]]:: [ [2 When substantially equal`-amplitude vertically`- and horizontally`-polarized components are radiated without particular control of the phase relation between them. Typically, the vertically`-and horizontally polarized sources may be displaced one from the other so that the resultant polarization varies between circular and slant, according to the azimuth angle.]]:: [ [2 Mixed]]:: [ [2 M]]:: [ [2 The collective term applies when both vertical and horizontal components are radiated, embracing slant circular and dual polarization.]]}}")).LeftPosZ(896, 184).TopPosZ(410, 20))
	ITEM(Upp::Label, dv___12, SetLabel(t_("[4B] Country")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(210, 20))
	ITEM(Upp::DropList, tx13Ystat, Tip(t_("\001[g [i150;O0; A  For information: the assignment described is not submitted to a coordination&][ procedure and to any protection requirement.&][i150;O0; B  Request for agreement.&][i150;O0; C  Agreed without reservation.&][i150;O0; D  Temporary status: Coordination subject to operational tests to show that&][ coexistence is possible.&][i150;O0; E  Agreement on a non`-interference basis (NIB); revocation of the agreement and any&][ request to cease the emissions in question requires proof that harmful interference&][ has been caused to assignments whose status has already been established, which&][ should normally be described in an associated notice.&][i150;O0; F  Agreed, subject to a requirement identical or analogous to the requirement&][ of RR 4.4. (Protection of primary allocated services)&][i150;O0; G  Agreed, without any reservation as to interference which may be caused by the&][ assignment described; the applicant is, however, informed that there is a risk of&][ interference from assignments whose status has already been established, and that&][ the responsibility for any such risk is his; one or more associated notices may be sent.&][i150;O0; H  E`+G&][i150;O0; M  Request for agreement following a modified coordination after an answer coded E,&][ G, H or Z.&][i150;O0; P  Assignment according to preferential frequency agreements (1.3.2 of the&][ Agreement) or geographical network plans (1.3.5 of the Agreement) or shared&][ frequency agreements (1.3.3 of the Agreement) or frequencies using preferential&][ codes (1.3.6 of the Agreement) or frequencies used on the basis of arrangements&][ between operators (1.3.7 of the Agreement).&][i150;O0; R  Deletion of coordinated assignment.&][i150;O0; W  Withdrawal of the coordination request.&][i150;O0; Z  Request for agreement refused]")).LeftPosZ(456, 184).TopPosZ(364, 20))
	ITEM(Upp::Label, dv___14, SetLabel(t_("[13Y] Status of co-ordination")).LeftPosZ(240, 212).TopPosZ(364, 20))
	ITEM(Upp::EditString, h05, MaxLen(40).MaxChars(40).LeftPosZ(456, 184).TopPosZ(108, 20))
	ITEM(Upp::Label, dv___16, SetLabel(t_("[05] E-mail address")).LeftPosZ(240, 212).TopPosZ(108, 20))
	ITEM(Upp::EditString, h06, MaxLen(20).MaxChars(20).LeftPosZ(456, 184).TopPosZ(130, 20))
	ITEM(Upp::Label, dv___18, SetLabel(t_("[06] Phone")).LeftPosZ(240, 212).TopPosZ(130, 20))
	ITEM(Upp::EditString, h07, MaxLen(20).MaxChars(20).LeftPosZ(456, 184).TopPosZ(154, 20))
	ITEM(Upp::Label, dv___20, SetLabel(t_("[07] Telefax")).LeftPosZ(240, 212).TopPosZ(154, 20))
	ITEM(Upp::EditString, h08, MaxLen(20).MaxChars(20).LeftPosZ(896, 184).TopPosZ(20, 20))
	ITEM(Upp::Label, dv___22, SetLabel(t_("[08] Name of responsible person")).LeftPosZ(680, 212).TopPosZ(20, 20))
	ITEM(Upp::EditInt, h09, Min(0).Max(999999).MaxChars(6).LeftPosZ(896, 184).TopPosZ(42, 20))
	ITEM(Upp::Label, dv___24, SetLabel(t_("[09] Number of records")).LeftPosZ(680, 212).TopPosZ(42, 20))
	ITEM(Upp::DropDate, h10, LeftPosZ(896, 184).TopPosZ(64, 20))
	ITEM(Upp::Label, dv___26, SetLabel(t_("[10] Writing date")).LeftPosZ(680, 212).TopPosZ(64, 20))
	ITEM(Upp::DropList, h11, LeftPosZ(896, 184).TopPosZ(86, 20))
	ITEM(Upp::Label, dv___28, SetLabel(t_("[11] Destination country")).LeftPosZ(680, 212).TopPosZ(86, 20))
	ITEM(Upp::EditInt, h12, Min(0).Max(999999).MaxChars(6).LeftPosZ(896, 184).TopPosZ(108, 20))
	ITEM(Upp::Label, dv___30, SetLabel(t_("[12] Unique file number")).LeftPosZ(680, 212).TopPosZ(108, 20))
	ITEM(Upp::EditString, h13, MaxLen(3).MaxChars(3).LeftPosZ(896, 184).TopPosZ(130, 20))
	ITEM(Upp::Label, dv___32, SetLabel(t_("[13] File version")).LeftPosZ(680, 212).TopPosZ(130, 20))
	ITEM(Upp::EditString, h14, MaxLen(7).MaxChars(7).LeftPosZ(896, 184).TopPosZ(154, 20))
	ITEM(Upp::Label, dv___34, SetLabel(t_("[14] Reserved for future use")).LeftPosZ(680, 212).TopPosZ(154, 20))
	ITEM(Upp::Label, dv___35, SetLabel(t_("[01] File number on media")).LeftPosZ(240, 212).TopPosZ(20, 20))
	ITEM(Upp::Label, dv___36, SetLabel(t_("[1A] Transmitting frequency")).SetFont(Upp::StdFont().Bold()).SetInk(Upp::Black).LeftPosZ(240, 212).TopPosZ(188, 20))
	ITEM(Upp::EditDouble, tx1Afreq, Min(0.0001).Max(99999).MaxChars(11).Tip(t_("\001[g 1A/1Y: at least one of the two fields has to be filled in. In case of only Rx, 1A is complete blank")).LeftPosZ(456, 104).TopPosZ(188, 20))
	ITEM(Upp::DropList, tx1Yfreq2, LeftPosZ(560, 80).TopPosZ(210, 20))
	ITEM(Upp::EditDouble, tx1Yfreq, Min(0.0001).Max(99999).MaxChars(11).LeftPosZ(456, 104).TopPosZ(210, 20))
	ITEM(Upp::Label, dv___40, SetLabel(t_("[1Y] Receiving frequency")).SetFont(Upp::StdFont().Bold()).SetInk(Upp::Black).LeftPosZ(240, 212).TopPosZ(210, 20))
	ITEM(Upp::DrawingCtrl, dv___41, HSizePosZ(5, 3).TopPosZ(545, 56))
	ITEM(Upp::Button, ok, SetLabel(t_("CLOSE")).SetFont(Upp::StdFont().Bold()).LeftPosZ(936, 152).TopPosZ(553, 40))
	ITEM(Upp::Button, btnSave, SetLabel(t_("Save Station")).SetFont(Upp::StdFont().Bold()).LeftPosZ(780, 152).TopPosZ(553, 40))
	ITEM(Upp::EditInt, tx13Xr, Min(1).Max(9).MaxChars(1).LeftPosZ(456, 184).TopPosZ(498, 20))
	ITEM(Upp::Label, dv___45, SetLabel(t_("[13X] Number of associated records ")).LeftPosZ(240, 212).TopPosZ(498, 20))
	ITEM(Upp::EditInt, tx13Xo, Min(1).Max(9).MaxChars(1).LeftPosZ(456, 184).TopPosZ(520, 20))
	ITEM(Upp::Label, dv___47, SetLabel(t_("[13X] Order number of record")).LeftPosZ(240, 212).TopPosZ(520, 20))
	ITEM(Upp::EditString, tx9Xhori, MaxChars(7).Tip(t_("\001[g If 9A is blank, 9XH is 000ND00")).LeftPosZ(896, 184).TopPosZ(476, 20))
	ITEM(Upp::Label, dv___49, SetLabel(t_("[9XH] Type of antenna horizontal")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(476, 20))
	ITEM(Upp::EditString, tx9Xvert, MaxChars(7).Tip(t_("\001[g If 9B is blank, 9XV is 000ND00. 000ND00 should be avoided for non mobile stations ")).LeftPosZ(896, 184).TopPosZ(498, 20))
	ITEM(Upp::Label, dv___51, SetLabel(t_("[9XV] Type of antenna vertical")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(498, 20))
	ITEM(Upp::EditString, tx13Zrema, MaxChars(50).LeftPosZ(456, 184).TopPosZ(388, 20))
	ITEM(Upp::Label, dv___53, SetLabel(t_("[13Z] Remarks")).LeftPosZ(240, 212).TopPosZ(388, 20))
	ITEM(Upp::Label, dv___54, SetLabel(t_("[13X] Co-ordination reference. Country")).LeftPosZ(240, 212).TopPosZ(410, 20))
	ITEM(Upp::EditInt, tx13Xzz, Min(0).Max(99).MaxChars(2).LeftPosZ(456, 184).TopPosZ(432, 20))
	ITEM(Upp::Label, dv___56, SetLabel(t_("[13X] Year of initial co-ordination ")).LeftPosZ(240, 212).TopPosZ(432, 20))
	ITEM(Upp::EditInt, tx13Xff, Min(1).Max(99).MaxChars(2).LeftPosZ(456, 184).TopPosZ(476, 20))
	ITEM(Upp::Label, dv___58, SetLabel(t_("[13X] Frequency order number")).LeftPosZ(240, 212).TopPosZ(476, 20))
	ITEM(Upp::EditInt, tx13Xpp, Min(1).Max(999999).MaxChars(6).LeftPosZ(456, 184).TopPosZ(454, 20))
	ITEM(Upp::Label, dv___60, SetLabel(t_("[13X] Process identification")).LeftPosZ(240, 212).TopPosZ(454, 20))
	ITEM(Upp::EditDouble, tx4Zhei, Min(1).Max(1000).MaxChars(5).LeftPosZ(896, 184).TopPosZ(298, 20))
	ITEM(Upp::Label, dv___62, SetLabel(t_("[4Z] Height above sea level [m]")).LeftPosZ(680, 212).TopPosZ(298, 20))
	ITEM(Upp::EditDouble, tx9Aazim, Min(0).Max(359.9).MaxChars(5).Tip(t_("\001[g If 6A starts with `\"M`\", 9A is always blank")).LeftPosZ(896, 184).TopPosZ(364, 20))
	ITEM(Upp::Label, dv___64, SetLabel(t_("[9A] Azimuth [0..359.9]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 120).TopPosZ(364, 20))
	ITEM(Upp::EditDouble, tx9Belev, Min(-90).Max(90).MaxChars(5).Tip(t_("\001[g [+92 For antennas with 9XV `=  TA this field contains the electrical tilt]")).LeftPosZ(896, 184).TopPosZ(388, 20))
	ITEM(Upp::Label, dv___66, SetLabel(t_("[9B] Elevation angle [-90.0 .. 90.0]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(388, 20))
	ITEM(Upp::Label, dv___67, SetLabel(t_("[9D] Polarization")).LeftPosZ(680, 212).TopPosZ(410, 20))
	ITEM(Upp::EditDouble, tx9Ggain, Min(0).Max(99.9).MaxChars(4).LeftPosZ(896, 184).TopPosZ(432, 20))
	ITEM(Upp::Label, dv___69, SetLabel(t_("[9G] Gain [dB]")).LeftPosZ(680, 212).TopPosZ(432, 20))
	ITEM(Upp::EditDouble, tx9Yheit, Min(0).Max(1000).MaxChars(4).LeftPosZ(896, 184).TopPosZ(454, 20))
	ITEM(Upp::Label, dv___71, SetLabel(t_("[9Y] Height above ground [m]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(454, 20))
	ITEM(Upp::EditDouble, tx8B1max, Min(-1000).Max(1000).MaxChars(6).Tip(t_("\001[g If 1A is missing, 8B1 has to be missing too")).LeftPosZ(896, 184).TopPosZ(342, 20))
	ITEM(Upp::Label, dv___73, SetLabel(t_("[8B1] Maximal radiated power [dBW]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(342, 20))
	ITEM(Upp::DropDate, tx2Cdate, Tip(t_("\001[g Blank or filled in in connection with 1Z, 2Z, 13Y")).LeftPosZ(456, 184).TopPosZ(298, 20))
	ITEM(Upp::DropList, tx1Zfrcat, Tip(t_("\001[g [i150;O0; 1  Preferential frequencies&][i150;O0; 2  Frequencies requiring coordination&][i150;O0; 3  Frequencies used on the basis of geographical network plans&][i150;O0; 4  Frequencies for a planned radiocommunications network&][i150;O0; 5  Shared frequencies&][i150;O0; 6  Reserved for bi`- or multilateral use&][i150;O0; 7  Frequencies using preferential codes&][i150;O0; 8  Frequencies used on the basis of arrangements between operators]")).LeftPosZ(392, 52).TopPosZ(232, 20))
	ITEM(Upp::Label, dv___76, SetLabel(t_("[1Z] Frequency category")).LeftPosZ(240, 132).TopPosZ(232, 20))
	ITEM(Upp::DropList, tx6Bnatu, Tip(t_("\001[g [i150;O0; CO Station open to official correspondence exclusively&][i150;O0; CP  Station open to public correspondence&][i150;O0; CR  Station open to limited public correspondence&][i150;O0; CV  Station open exclusively to correspondence of a private agent&][i150;O0; OT  Station open exclusively to operational traffic of the service concerned]")).LeftPosZ(392, 52).TopPosZ(254, 20))
	ITEM(Upp::Label, dv___78, SetLabel(t_("[6B] Nature of service")).LeftPosZ(240, 132).TopPosZ(254, 20))
	ITEM(Upp::DropList, tx10Zch, Tip(t_("\001[g [i150;O0; 0: not continuous&][i150;O0; 1: continuous]")).LeftPosZ(392, 52).TopPosZ(276, 20))
	ITEM(Upp::Label, dv___80, SetLabel(t_("[10Z] Channel occupation")).SetFont(Upp::StdFont().Bold()).LeftPosZ(240, 132).TopPosZ(276, 20))
	ITEM(Upp::DropList, tx8B2ref, Tip(t_("\001[g [i150;O0; E for e.r.p.&][i150;O0; I for e.i.r.p.]")).LeftPosZ(588, 52).TopPosZ(276, 20))
	ITEM(Upp::Label, dv___82, SetLabel(t_("[8B2]Type of ref. ant.")).SetFont(Upp::StdFont().Bold()).LeftPosZ(456, 132).TopPosZ(276, 20))
	ITEM(Upp::DropList, tx6Aclas, Tip(t_("\001[g [i150;O0; [2 FB  Base station]&][i150;O0; [2 FC  Coast station]&][i150;O0; [2 FL  Land station]&][i150;O0; [2 FP  Port station]&][i150;O0; [2 FS  Land station established solely for safety of life]&][i150;O0; [2 FW Mobile station with a radius of service area of 0 km and an effective antenna height of]&][i150;O0; [2 the co`-ordinates of the particular place as specified in Annex 5, point 2.5]&][i150;O0; [2 FX  Fixed station]&][i150;O0; [2 ML  Land mobile station i.e. mobile station in the land mobile service]&][i150;O0; [2 MO Mobile station i.e. station in the mobile service intended to be used while in]&][i150;O0; [2 motion or during halts at unspecified points (maximum operating height determined in]&][i150;O0; [2 field 9Y)]&][i150;O0; [2 MR Radiolocation mobile station]&][i150;O0; [2 MS Ship station]]")).LeftPosZ(588, 52).TopPosZ(232, 20))
	ITEM(Upp::Label, dv___84, SetLabel(t_("[6A] Class of station")).LeftPosZ(456, 124).TopPosZ(232, 20))
	ITEM(Upp::EditString, tx6Zcat, MaxLen(2).MaxChars(2).Tip(t_("\001[g [i150;O0; A  Airport services&][i150;O0; B  Railways (excluding mountain railways)&][i150;O0; C  Diplomatic corps&][i150;O0; D  Mountain railways&][i150;O0; E  Production, transport and distribution of energy (electricity, gas, water)&][i150;O0; F  Fire services&][i150;O0; G  Military&][i150;O0; H  Radio relay networks&][i150;O0; HH  Local call&][i150;O0; I  Demonstration&][i150;O0; K  Public transport&][i150;O0; L  Subscriber installations, public mobile services, stand`-by links&][i150;O0; M  Navigation (in ports, on the river, etc.)&][i150;O0; N  Tests and research&][i150;O0; O  Not allocated&][i150;O0; P  Public security services (Police, customs, etc.)&][i150;O0; Q  Entries not falling within other categories on this list (cordless microphones, etc.)&][i150;O0; R  Ancillary broadcasting services (studio, news reporting)&][i150;O0; S  Rescue services (ambulances, doctors, water and mountain rescue)&][i150;O0; T  Other services provided by telecommunications administrations&][i150;O0; U  Industrial operators&][i150;O0; V  Road traffic service&][i150;O0; W  Taxi and car hire firms&][i150;O0; X  Other private services&][i150;O0; Y  Reserved specific applications, not allocated&][i150;O0; Z  Other private multiple`-use networks&][i150;O0; These codes can be combined (maximum two characters):&][i150;O0; e.g. XP`- private police service]")).LeftPosZ(588, 52).TopPosZ(254, 20))
	ITEM(Upp::Label, dv___86, SetLabel(t_("[6Z] Category of use")).LeftPosZ(456, 124).TopPosZ(254, 20))
	ITEM(Upp::Label, dv___87, SetLabel(t_("[2C] Date of bringing into use")).LeftPosZ(240, 204).TopPosZ(298, 20))
	ITEM(Upp::DropDate, tx2Wdate, LeftPosZ(456, 184).TopPosZ(320, 20))
	ITEM(Upp::Label, dv___89, SetLabel(t_("[2W] Date of co-ordination request")).LeftPosZ(240, 204).TopPosZ(320, 20))
	ITEM(Upp::DropDate, tx2Zdate, LeftPosZ(456, 184).TopPosZ(342, 20))
	ITEM(Upp::Label, dv___91, SetLabel(t_("[2Z] Final date of achieving, co-ordination")).LeftPosZ(240, 204).TopPosZ(342, 20))
	ITEM(Upp::EditString, tx4Aname, MaxChars(20).Tip(t_("\001[g Abbreviations  Explanation&][i150;O0; B  Bay&][i150;O0; BRDG  Bridge&][i150;O0; C  Cape&][i150;O0; CL  Central&][i150;O0; CP  Camp&][i150;O0; CY  City&][i150;O0; DPT  Department&][i150;O0; E  East&][i150;O0; ET  State&][i150;O0; FT  Fort&][i150;O0; FIR  Fire Tower&][i150;O0; GF  Gulf&][i150;O0; GR  Grand&][i150;O0; GT  Great&][i150;O0; HLL  Hill&][i150;O0; HR  Harbour&][i150;O0; I  Island(s)&][i150;O0; INTR  Usage in the whole country&][i150;O0; JN  Junction&][i150;O0; L  Lake&][i150;O0; LSTN  Light station&][i150;O0; MT  Mount&][i150;O0; MTN  Mountain(s)&][i150;O0; N  New&][i150;O0; NO  North&][i150;O0; NTL  National&][i150;O0; PK  Peak&][i150;O0; PMPSTN  Pump station&][i150;O0; PT  Port (see HR)&][i150;O0; RV  River&][i150;O0; S  Saint&][i150;O0; STN  Station&][i150;O0; SO  South&][i150;O0; TR  Tower&][i150;O0; V  Vila, Villa, Ville&][i150;O0; VLY  Valley&][i150;O0; W  West")).LeftPosZ(896, 184).TopPosZ(188, 20))
	ITEM(Upp::Label, dv___93, SetLabel(t_("[4A] Name of station")).LeftPosZ(680, 212).TopPosZ(188, 20))
	ITEM(Upp::EditString, tx4Clong, MaxChars(8).LeftPosZ(896, 184).TopPosZ(232, 20))
	ITEM(Upp::Label, dv___95, SetLabel(t_("[4C] Longitude [123E1234]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(232, 20))
	ITEM(Upp::EditString, tx4Clati, MaxChars(7).LeftPosZ(896, 184).TopPosZ(254, 20))
	ITEM(Upp::Label, dv___97, SetLabel(t_("[4C] Latitude [89S1234]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(254, 20))
	ITEM(Upp::EditInt, tx4Dradi, Min(0).Max(1000).MaxChars(5).Tip(t_("\001[g If 6A does not start with `\"M`\" 4D is always 0")).LeftPosZ(896, 184).TopPosZ(276, 20))
	ITEM(Upp::Label, dv___99, SetLabel(t_("[4D] Radius of the operating area [km]")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(276, 20))
	ITEM(Upp::EditString, tx7Adesi, MaxChars(9).LeftPosZ(896, 184).TopPosZ(320, 20))
	ITEM(Upp::Label, dv___101, SetLabel(t_("[7A] Designation of emission")).SetFont(Upp::StdFont().Bold()).LeftPosZ(680, 212).TopPosZ(320, 20))
	ITEM(Upp::ArrayCtrl, table, LeftPosZ(4, 224).TopPosZ(44, 468))
	ITEM(Upp::Button, BtnAdd, SetLabel(t_("Add")).HSizePosZ(4, 1024).TopPosZ(8, 32))
	ITEM(Upp::Button, BtnDelete, SetLabel(t_("Delete")).HSizePosZ(155, 873).TopPosZ(8, 32))
END_LAYOUT

LAYOUT(MobileServiceLayout, 464, 276)
	ITEM(Upp::TabCtrl, mainTab, AcceptCurrent(true).LeftPosZ(12, 232).TopPosZ(16, 132))
END_LAYOUT

